for(term a0:A){
word w1= concat (w0, elof(a0));
auto ew1= elof(w1);
target.Q += elof(w1);
target.F += elof(w1);
target.delta += mytransition(ew0, elof(make_lpair(epush, a0)), ew1);
target.delta += mytransition(ew1, elof(make_lpair(epop, a0)), ew0);
for(term a1:A) Ife (a0!=a1){
word w2= concat (w1, elof(a1));
auto ew2= elof(w2);
target.Q += elof(w2);
target.F += elof(w2);
target.delta += mytransition(ew1, elof(make_lpair(epush, a1)), ew2);
target.delta += mytransition(ew2, elof(make_lpair(epop, a1)), ew1);
for(term a2:A) Ife (a0!=a2 && a1!=a2){
word w3= concat (w2, elof(a2));
auto ew3= elof(w3);
target.Q += elof(w3);
target.F += elof(w3);
target.delta += mytransition(ew2, elof(make_lpair(epush, a2)), ew3);
target.delta += mytransition(ew3, elof(make_lpair(epop, a2)), ew2);
for(term a3:A) Ife (a0!=a3 && a1!=a3 && a2!=a3){
word w4= concat (w3, elof(a3));
auto ew4= elof(w4);
target.Q += elof(w4);
target.F += elof(w4);
target.delta += mytransition(ew3, elof(make_lpair(epush, a3)), ew4);
target.delta += mytransition(ew4, elof(make_lpair(epop, a3)), ew3);
for(term a4:A) Ife (a0!=a4 && a1!=a4 && a2!=a4 && a3!=a4){
word w5= concat (w4, elof(a4));
auto ew5= elof(w5);
target.Q += elof(w5);
target.F += elof(w5);
target.delta += mytransition(ew4, elof(make_lpair(epush, a4)), ew5);
target.delta += mytransition(ew5, elof(make_lpair(epop, a4)), ew4);
for(term a5:A) Ife (a0!=a5 && a1!=a5 && a2!=a5 && a3!=a5 && a4!=a5){
word w6= concat (w5, elof(a5));
auto ew6= elof(w6);
target.Q += elof(w6);
target.F += elof(w6);
target.delta += mytransition(ew5, elof(make_lpair(epush, a5)), ew6);
target.delta += mytransition(ew6, elof(make_lpair(epop, a5)), ew5);
for(term a6:A) Ife (a0!=a6 && a1!=a6 && a2!=a6 && a3!=a6 && a4!=a6 && a5!=a6){
word w7= concat (w6, elof(a6));
auto ew7= elof(w7);
target.Q += elof(w7);
target.F += elof(w7);
target.delta += mytransition(ew6, elof(make_lpair(epush, a6)), ew7);
target.delta += mytransition(ew7, elof(make_lpair(epop, a6)), ew6);
for(term a7:A) Ife (a0!=a7 && a1!=a7 && a2!=a7 && a3!=a7 && a4!=a7 && a5!=a7 && a6!=a7){
word w8= concat (w7, elof(a7));
auto ew8= elof(w8);
target.Q += elof(w8);
target.F += elof(w8);
target.delta += mytransition(ew7, elof(make_lpair(epush, a7)), ew8);
target.delta += mytransition(ew8, elof(make_lpair(epop, a7)), ew7);
for(term a8:A) Ife (a0!=a8 && a1!=a8 && a2!=a8 && a3!=a8 && a4!=a8 && a5!=a8 && a6!=a8 && a7!=a8){
word w9= concat (w8, elof(a8));
auto ew9= elof(w9);
target.Q += elof(w9);
target.F += elof(w9);
target.delta += mytransition(ew8, elof(make_lpair(epush, a8)), ew9);
target.delta += mytransition(ew9, elof(make_lpair(epop, a8)), ew8);
for(term a9:A) Ife (a0!=a9 && a1!=a9 && a2!=a9 && a3!=a9 && a4!=a9 && a5!=a9 && a6!=a9 && a7!=a9 && a8!=a9){
word w10= concat (w9, elof(a9));
auto ew10= elof(w10);
target.Q += elof(w10);
target.F += elof(w10);
target.delta += mytransition(ew9, elof(make_lpair(epush, a9)), ew10);
target.delta += mytransition(ew10, elof(make_lpair(epop, a9)), ew9);
for(term a10:A) Ife (a0!=a10 && a1!=a10 && a2!=a10 && a3!=a10 && a4!=a10 && a5!=a10 && a6!=a10 && a7!=a10 && a8!=a10 && a9!=a10){
word w11= concat (w10, elof(a10));
auto ew11= elof(w11);
target.Q += elof(w11);
target.F += elof(w11);
target.delta += mytransition(ew10, elof(make_lpair(epush, a10)), ew11);
target.delta += mytransition(ew11, elof(make_lpair(epop, a10)), ew10);
for(term x: A) target.delta += mytransition(ew11, (elpair(epush, x)), etrash);
}
else target.delta += mytransition(ew10, elof(make_lpair(epush, a10)), etrash);
}
else target.delta += mytransition(ew9, elof(make_lpair(epush, a9)), etrash);
}
else target.delta += mytransition(ew8, elof(make_lpair(epush, a8)), etrash);
}
else target.delta += mytransition(ew7, elof(make_lpair(epush, a7)), etrash);
}
else target.delta += mytransition(ew6, elof(make_lpair(epush, a6)), etrash);
}
else target.delta += mytransition(ew5, elof(make_lpair(epush, a5)), etrash);
}
else target.delta += mytransition(ew4, elof(make_lpair(epush, a4)), etrash);
}
else target.delta += mytransition(ew3, elof(make_lpair(epush, a3)), etrash);
}
else target.delta += mytransition(ew2, elof(make_lpair(epush, a2)), etrash);
}
else target.delta += mytransition(ew1, elof(make_lpair(epush, a1)), etrash);
}
